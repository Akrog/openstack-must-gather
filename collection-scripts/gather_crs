#!/bin/bash

# When called from the shell directly
if [[ -z "$DIR_NAME" ]]; then
    CALLED=1
    DIR_NAME=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
    source "${DIR_NAME}/common.sh"
fi

# Resource list
resources=()

# explictly adding rabbit in the grep because it's not part of the openstack
# umbrella and we rely on the upstream rabbitmq-cluster-operator
for i in $(/usr/bin/oc get crd | grep -E "(openstack|rabbitmq)\.(org|com)" | awk '{print $1}')
do
  resources+=("$i")
done

# explicitly adding Metal3 BareMetalHosts
resources+=("baremetalhosts.metal3.io")

# we use nested loops to nicely output objects partitioned per namespace, kind
echo "Gathering CRs"
for resource in "${resources[@]}"; do
  /usr/bin/oc get "${resource}" --all-namespaces -o custom-columns=NAME:.metadata.name,NAMESPACE:.metadata.namespace --no-headers 2> /dev/null | \
  while read -r ocresource; do
    ocobject=$(echo "$ocresource" | awk '{print $1}')
    ocproject=$(echo "$ocresource" | awk '{print $2}')
    if [ -z "${ocproject}" ]||[ "${ocproject}" == "<none>" ]; then
      object_collection_path=${BASE_COLLECTION_PATH}/cluster-scoped-resources/${resource}
      mkdir -p "${object_collection_path}"
      run_bg /usr/bin/oc get "${resource}" -o yaml "${ocobject}" '>' "${object_collection_path}/${ocobject}.yaml"
    else
      object_collection_path=${BASE_COLLECTION_PATH}/namespaces/${ocproject}/crs/${resource}
      mkdir -p "${object_collection_path}"
      run_bg /usr/bin/oc get "${resource}" -n "${ocproject}" -o yaml "${ocobject}" '>' "${object_collection_path}/${ocobject}.yaml"
    fi
  done
done

[[ $CALLED -eq 1 ]] && wait_bg
