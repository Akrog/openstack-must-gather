#!/bin/bash

# load shared functions and data
DIR_NAME=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
# shellcheck disable=SC1091
source "${DIR_NAME}/common.sh"

NS="$1"
if [ -z "$NS" ]; then
    echo "No namespace passed, using the default one"
    NS=openstack
fi

# Only get resources if the namespace exists
if ! check_namespace "${NS}"; then
    exit 0
fi

# Get the view of the current namespace related resources, including pods
mkdir -p "${NAMESPACE_PATH}"/"${NS}"
/usr/bin/oc -n "${NS}" get all > "${NAMESPACE_PATH}"/"${NS}"/all_resources.log
/usr/bin/oc -n "${NS}" get events > "${NAMESPACE_PATH}"/"${NS}"/events.log
/usr/bin/oc -n "${NS}" get pvc > "${NAMESPACE_PATH}"/"${NS}"/pvc.log

# Get pods and the associated logs
for p in $(oc -n "$NS" get pods -o custom-columns=":metadata.name"); do
    echo "Dump logs for pod: $p";
    mkdir -p "${NAMESPACE_PATH}"/"$NS"/pods/"$p"/logs
    # describe pod
    /usr/bin/oc -n "$NS" describe pod "$p" > "${NAMESPACE_PATH}"/"$NS"/pods/"$p"/"$p"-describe.log
    # get logs
    /usr/bin/oc -n "$NS" logs --prefix=true --all-containers=true "$p" > "${NAMESPACE_PATH}"/"$NS"/pods/"$p"/logs/"$p".log;
    # dump --previous logs for all the terminated containers of the pod
    cur=$(/usr/bin/oc -n "$NS" get pods "$p"  -o jsonpath="{.status.containerStatuses[*].lastState.terminated}")
    if [[ -n "$cur" ]]; then
        /usr/bin/oc -n "$NS" logs --prefix=true --previous "$p" > "${NAMESPACE_PATH}"/"$NS"/pods/"$p"/logs/"$p"-previous.log;
    fi
done

# get the required resources
# shellcheck disable=SC2154
for r in "${resources[@]}"; do
    get_resources "$r" "$NS"
done

exit 0
